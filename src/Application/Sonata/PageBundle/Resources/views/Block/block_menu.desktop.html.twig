{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends sonata_block.templates.block_base %}

{% block block %}
    {% if app.security.token and app.security.isGranted('ROLE_SONATA_ADMIN') %}
        <link rel="stylesheet" href="{{ asset('/bundles/applicationsonatapage/sitemap/sitemapTree.css') }}" type="text/css" media="all">
    {% endif %}
    <style type="text/css">
        #whiteBgTop {
        {% if app.security.token and app.security.isGranted('ROLE_SONATA_ADMIN') %}
            top: auto !important;
            margin-top:-5px;
        {% endif %}

            z-index: 10001 !important;
        }
    </style>
    {# Desktop Main Menu Starts #}
    <ul id="desktopNav" class="inline nav clearfix hidden-phone">
        {% if settings.content.items is defined %}
            {% set menu = settings.content.items %}
            {% include "ApplicationSonataPageBundle:Block:nav_item.desktop.html.twig" with {'links':menu } only %}
        {% endif %}
        {% if app.security.token and app.security.isGranted('ROLE_SONATA_ADMIN') %}
            <li>
                <a href="#" class="toggleDesktop btn btn-inverse btn-menu" ><i class="icon-pencil icon-white"></i></a>
                <button class="btn btn-inverse btn-menu" id="sync_menu"><i class="icon-refresh icon-white"></i></button>
            </li>
        {% endif %}
    </ul>

    {# Desktop Main Menu Ends #}
    <!-- MOBILE NAV STARTS -->
    <ul id="mobileNav" class="inline nav toggle clearfix">
        {% if settings.content.items is defined %}
            {% set menu = settings.content.items %}
            {% include "ApplicationSonataPageBundle:Block:nav_item.mobile.html.twig" with {'links':menu } only %}
        {% endif %}
    </ul>
    <!-- MOBILE NAV ENDS -->
    {# closing of divs opened in header page starts#}

    {# closing of divs opened in header page ends #}
    <!-- DESKTOP STARTS -->
    <div id="headerDrop" class="clearfix">
        {% if settings.content.items is defined %}
            {% set menu = settings.content.items %}
            {% include "ApplicationSonataPageBundle:Block:sub_nav_item.desktop.html.twig" with {'links':menu } only %}
        {% endif %}
        {% if app.security.token and app.security.isGranted('ROLE_SONATA_ADMIN') %}

        <div id="navContent{{ settings.content.items|length }}" class="navContent">
            <div class="span12 borderTop"></div>
            <div class="span4">
                <div id="node-form" class="ui-helper-hidden" >
                    <fieldset>
                        <legent>Add or Edit</legend>

                                <input id="nav-item-id" type="hidden" value="">
                                <div class="control-group" style="margin-bottom: 0px;">
                                    <label class="control-label" for="url">Title</label>
                                    <div class="controls">
                                        <input id="nav-item-name" class="input-medium" type="text" placeholder="Title">
                                    </div>
                                </div>

                                <div class="control-group" style="margin-bottom: 0px;">
                                    <label class="control-label" for="url">URL Type</label>
                                    <div class="controls">
                                        <select id="nav-item-page-type" onchange="changetype(this)">
                                            <option value="">Select Type</option>
                                              <option  value="internal">Internal</option>
                                              <option  value="external">External</option>                                            
                                        </select>
                                    </div>
                                </div>
                                
                                <div class="control-group ui-helper-hidden" id="external-url" style="margin-bottom: 0px;">
                                    <label class="control-label" for="url">External URL</label>
                                    <div class="controls">
                                        <input id="nav-item-external-url" class="input-medium" type="text" placeholder="External Url">
                                    </div>
                                </div>
                                
                                <div class="control-group ui-helper-hidden" id="internal-url" style="margin-bottom: 0px;">
                                    <label class="control-label" for="url">Internal Page</label>
                                    <div class="controls">
                                        <select id="nav-item-page-id">
                                            <option value="">Select a Page</option>
                                            {% for pageItem in pages %}
                                                <option  value="{{ pageItem.id }}">{{ pageItem.name }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                </div>
                                <div class="control-group" style="margin-bottom: 0px;">
                                    <label class="control-label" for="url">Item Class</label>
                                    <div class="controls">
                                        <input id="nav-item-class" class="input-medium" type="text" placeholder="Item Class">
                                    </div>
                                </div>
                                <div class="control-group" style="margin-bottom: 0px;">
                                    <label class="control-label" for="url">Summary Title</label>
                                    <div class="controls">
                                        <input id="nav-item-summary-title" class="input-medium" type="text" placeholder="Summary Title" >
                                    </div>
                                </div>
                                <div class="control-group" style="margin-bottom: 0px;">
                                    <label class="control-label" for="url">Summary</label>
                                    <div class="controls">
                                        <textarea rows="4" id="nav-item-summary-desc" placeholder="Summary"></textarea>
                                    </div>
                                </div>
                                <br/>


                                {#<input id="nav-item-summary-desc" class="" type="text-area" placeholder="Summary" ><br/>#}

                                <input id="nav-item-new" type="hidden" value="">

                            <button class="btn btn-inverse" onclick="saveNode($('#nav-item-new').val())" >Save</button>
                            <button class="btn" onclick="cancelAdding()">Cancel</button>
                    </fieldset>


                </div>
            </div>
            <div class="span8">
                <ul id="PageTree" class="tree sortable">
                    {% if settings.content.items is defined %}
                        {% set menu = settings.content.items %}
                        {% include "ApplicationSonataPageBundle:Block:menu_item.html.twig" with {'links':menu } only %}
                    {% endif %}
                </ul>
                <a href="#" onclick="addNode(null)" style="color: #000;"><i class="icon-plus" style="margin-left: 42px; margin-top: -5px;"></i>Add Root</a>
            </div>

            <div class="span12 borderBottom"></div>
            </div>
            {% endif %}

            <div id="navContentsearch" class="navContent">
                <div class="span12 borderTop"></div>
                <form id="headerSearch" class="nl-form" action="" method="GET" onsubmit="return redirect(this);">
                    <div class="span9">
                        <fieldset>
                            <select id="searchType" name="searchType">
                                <option value="all" selected>All</option>
                                <option value="accommodation">Accommodation</option>
                                <option value="events">Events</option>
                                <option value="attractions">Attractions</option>
                                <option value="pages">Pages</option>
                            </select>
                                <input type="search" placeholder="Search" name="searchTerm" required="required" class="clean" />
                            <div class="nl-overlay"></div>
                        </fieldset>
                    </div>
                    <div class="span3">
                        <fieldset>
                            <a id="cancelSearch" href="#">
                                <span class="entypo cross"></span>
                            </a>
                            <input class="nl-submit" value="SEARCH" type="submit" />
                        </fieldset>
                    </div>
                </form>
                <div class="span12"></div>
            </div>

        
    </div>
    <!-- DESKTOP ENDS -->



    <script type="text/javascript">
        function redirect(obj){
            if(obj.searchTerm.value != null){
             location.href = '/search/'+obj.searchType.value+'/'+obj.searchTerm.value;
             return false;
            }
            else
                return false;
        }
    </script>


    {% if app.security.token and app.security.isGranted('ROLE_SONATA_ADMIN') %}
        <div id="output_json_res"></div>
        <script type="text/javascript">
            var page_id = '{{page.id}}';
            var block_id = '{{block.id}}';
                        

            var menu = {{ settings.content.items|json_encode()|raw }};
            var menu_count = {{ settings.content.items|length }};

            var currentNode =  '';

            function changetype(obj){
                if($(obj).val() == 'internal'){
                   $('#internal-url').show();
                   $('#external-url').hide();
                   
                }else if($(obj).val() == 'external'){
                   $('#internal-url').hide();
                   $('#external-url').show();
                    
                }else{
                   $('#internal-url').hide();
                   $('#external-url').hide();
                }                
            }
            function addNode(node)
            {
                $('#node-form input').val('');
                $('#node-form select').val('').trigger('change');
                $('#nav-item-new').val(1);
                menu_count++;
                $('#nav-item-id').val(menu_count);
                $('#node-form').show();
                if(node == null){
                    $('#nav-item-summary-title').show();
                    $('#nav-item-summary-desc').show();
                }
                else
                {
                    $('#nav-item-summary-title').hide();
                    $('#nav-item-summary-desc').hide();
                }

                currentNode = node;
            }
            function editNode(node)
            {
                $('#nav-item-id').val(node.attr('data-id'));
                $('#nav-item-name').val(node.attr('data-name'));
                //$('#nav-item-link').val(node.attr('data-route'));
                //$('#nav-item-link-display').val(node.attr('data-link'));
                $('#nav-item-class').val(node.attr('data-class'));
                $('#nav-item-page-id').val(node.attr('data-pageid')).trigger('change');
                $('#nav-item-page-type').val(node.attr('data-page-type')).trigger('change');
                $('#nav-item-external-url').val(node.attr('data-external-url'));
                $('#nav-item-new').val(0);
                if(node.attr('data-summary-title') !== undefined){
                    $('#nav-item-summary-title').show();
                    $('#nav-item-summary-title').val(node.attr('data-summary-title'));
                }
                else {
                    $('#nav-item-summary-title').hide();
                }
                if(node.attr('data-summary-desc') !== undefined){
                    $('#nav-item-summary-desc').show();
                    $('#nav-item-summary-desc').val(node.attr('data-summary-desc'));
                }
                else{
                    $('#nav-item-summary-desc').hide();
                }
                $('#node-form').show();
                currentNode = node;
            }

            function saveNode(is_new)
            {

                var classAttr = 'parent collapsed';
                var menuItem = $('<li class="ui-draggable" data-id="'+$('#nav-item-id').val()+'" data-name="'+$('#nav-item-name').val()+'" data-class="'+$('#nav-item-class').val()+'" data-pageid="'+$('#nav-item-page-id').val()+'"data-page-type="'+$('#nav-item-page-type').val()+'"data-external-url="'+$('#nav-item-external-url').val()+'"><a href="#" class="caption ui-droppable" rel="'+$('#nav-item-id').val()+'">'+$('#nav-item-name').val()+'</a><span class="cmds"><span class="callback op1 icon-plus"></span> <span class="callback op2 icon-pencil"></span><span class="callback op3 icon-trash"></span></span></li>');
                if(currentNode != null){
                    
                    if(is_new == 0){
                        classAttr = currentNode.attr('class');
                        currentNode.attr('data-name', $('#nav-item-name').val());
                        //currentNode.attr('data-route',$('#nav-item-link').val());
                        //currentNode.attr('data-link', $('#nav-item-link-display').val());
                        currentNode.attr('data-class', $('#nav-item-class').val());
                        currentNode.attr('data-pageid', $('#nav-item-page-id').val());                        
                        if($('#nav-item-summary-title').val() != ''){
                            currentNode.attr('data-summary-title', $('#nav-item-summary-title').val());
                        }

                        if($('#nav-item-summary-desc').val() != ''){
                            currentNode.attr('data-summary-desc', $('#nav-item-summary-desc').val());
                        }
                        currentNode.attr('data-page-type', $('#nav-item-page-type').val());
                        currentNode.attr('data-external-url', $('#nav-item-external-url').val());
                        currentNode.children('a').html($('#nav-item-name').val());
                        //currentNode.children('a').attr('href', $('#nav-item-link').val());
                        currentNode.addClass(classAttr);
                    }
                    else if(!currentNode.children('ul').length){
                        currentNode.addClass(classAttr);
                        currentNode.append('<ul style="display: none;"></ul>');
                        currentNode.children('ul').append(menuItem);

                    }
                    else{
                        currentNode.children('ul').append(menuItem);
                    }


                }
                else{
                    menuItem.attr('data-summary-title', $('#nav-item-summary-title').val());
                    menuItem.attr('data-summary-desc', $('#nav-item-summary-desc').val());
                    console.log(menuItem);
                    $('#PageTree').append(menuItem);
                    alert('ok');
                }

                $('#node-form').hide();
                window.tree.init();
            }

            function cancelAdding(){
                $('#node-form').hide();
            }

            function loadTree(){
                return $("ul.tree").liveflex_treeview({
                    handle:'a.caption'
                    ,callbackSelector: 'span.callback'
                    ,callback: function(e){
                        //one way to use different items, you could also use rel or data
                        if($(e.target).hasClass('op1')){
                            addNode($(e.target).closest('li'));
                        }else if($(e.target).hasClass('op2')){
                            editNode($(e.target).closest('li'));
                        }
                        else{
                            if(confirm('Are you sure! This will delete the selected node and all its children')){
                                $(e.target).closest('li').remove();
                            }
                            else{
                                return false;
                            }

                        }
                    },itemMoved: function(csv){
                    },dirClick: function(node){
                        console.log(node.find('>a').text() + " > " + (node.hasClass('collapsed') ? ' closed' : ' opened'));
                    },nodeClick: function(node){
                        console.log(node.find('>a').text() + ' > selected');

                    }
                });
            }
            window.tree = {};
            $(document).ready(function () {
                //$("ul.tree").append('<li class="" data-name="'+$('#nav-item-id').val()+'"data-name="'+$('#nav-item-name').val()+'" data-route="'+$('#nav-item-link').val()+'"data-link="'+$('#nav-item-link-display').val()+'" data-class="'+$('#nav-item-class').val()+'" data-pageid="'+$('#nav-item-page-id').val()+'" ><a href="'+$('#nav-item-link').val()+'" class="caption ui-droppable">'+$('#nav-item-name').val()+'</a><span class="cmds"><span class="callback op1">Add</span> <span class="callback op2">Edit</span><span class="callback op3">Delete</span></span></li>');
                window.tree = loadTree();
                $('#sync_menu').click(function(e){
                    //get the moved items as id-parentId.position, used for db update
                    //log(tree.data("liveflex.treeview").getMoved());
                    //or get the tree as a nested array, to process further
                    var treeArray = window.tree.data("liveflex.treeview").parseTree();
                    console.log(treeArray);
                    $.ajax({
                        url: '/app_dev.php/add_menu',
                        type: 'POST',
                        data: { 'block_id': block_id,
                            'content': treeArray,
                            'template': 'desktop'
                        },
                        success: function(response) {
                            location.reload();
                        }
                    });


                });
            });
        </script>
    {% endif %}
{% endblock %}
