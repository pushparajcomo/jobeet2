{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends sonata_block.templates.block_base %}

{% block block %}
<link rel="stylesheet" href="{{ asset('bundles/applicationsonatapage/sitemap/sitemapTree.css') }}" type="text/css" media="all">
    {% if app.security.token and app.security.isGranted('ROLE_SONATA_ADMIN') %}

        <ul class="nav pull-right">
            <a href="#editMenu" role="button" class="btn btn-inverse" data-toggle="modal"><i class="icon-pencil icon-white"></i></a>
            {#<button type="button" class="btn btn-inverse" data-toggle="collapse" data-target="#editMenu">/button>#}
            {#<button type="button" class="btn btn-inverse" id="sync_menu"><i class="icon-refresh icon-white"></i></button>#}
        </ul>


        <div id="editMenu" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                <h3 id="myModalLabel">Edit Menu</h3>
            </div>
            <div class="modal-body">

                    <ul id="PageTree" class="tree sortable">
                        {% if settings.content.items is defined %}
                            {% set menu = settings.content.items %}
                            {% include "ApplicationSonataPageBundle:Block:menu_item.html.twig" with {'links':menu} only %}
                        {% endif %}
                    </ul>
                    <a href="#" onclick="addNode(null)" style="color: #000;"><i class="icon-plus" style="margin-left: 42px; margin-top: -5px;"></i></a>

                    <div id="node-form" class="ui-helper-hidden" >
                        <fieldset>
                            <legent>Add or Edit</legend>
                                <p>
                                    <input id="nav-item-id" type="hidden" value="">
                                    <input id="nav-item-name" class="input-medium" type="text" placeholder="Title"><br/>

                                    <select id="nav-item-page-id">
                                        <option value="">Select a Page</option>
                                        {% for pageItem in pages %}
                                            <option  value="{{ pageItem.id }}">{{ pageItem.name }}</option>
                                        {% endfor %}
                                    </select>
                                    <br/>
                                    <input id="nav-item-class" class="input-medium" type="text" placeholder="Item Class">
                                    <input id="nav-item-new" type="hidden" value="">
                                </p>
                                <button class="btn btn-inverse" onclick="saveNode($('#nav-item-new').val())" >Add</button>
                                <button class="btn" onclick="cancelAdding()">Cancel</button>
                        </fieldset>


                    </div>

            </div>
            <div class="modal-footer">
                <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
                <button class="btn btn-inverse" id="sync_menu">Save changes</button>
            </div>


        </div>

    {% endif %}
                <ul class="nav pull-right" id="header-nav-items">

                    {% if settings.content.items is defined %}
                        {% set menu = settings.content.items %}
                        {% include "ApplicationSonataPageBundle:Block:nav_item.html.twig" with {'links':menu, 'li_class': 'dropdown', 'data_hover': true } only %}
                    {% endif %}
                </ul>
                    
                    
                    

                            

{% if app.security.token and app.security.isGranted('ROLE_SONATA_ADMIN') %}
            <div id="output_json_res"></div>
<script type="text/javascript">
var page_id = '{{page.id}}';
var block_id = '{{block.id}}';


var menu = {{ settings.content.items|json_encode()|raw }};
var menu_count = {{ settings.content.items|length }};

var currentNode =  '';

function addNode(node)
{
    $('#node-form input').val('');
    $('#node-form select').val('').trigger('change');
    $('#nav-item-new').val(1);
    menu_count++;
    $('#nav-item-id').val(menu_count);
    $('#node-form').show();
    currentNode = node;
}
function editNode(node)
{
    $('#nav-item-id').val(node.attr('data-id')); 
    $('#nav-item-name').val(node.attr('data-name')); 
    //$('#nav-item-link').val(node.attr('data-route'));
    //$('#nav-item-link-display').val(node.attr('data-link'));
    $('#nav-item-class').val(node.attr('data-class'));
    $('#nav-item-page-id').val(node.attr('data-pageid')).trigger('change');
    $('#nav-item-new').val(0);
    $('#node-form').show();
    currentNode = node;
}

function saveNode(is_new)
{
    var classAttr = 'parent collapsed';
    var menuItem = $('<li class="ui-draggable" data-id="'+$('#nav-item-id').val()+'" data-name="'+$('#nav-item-name').val()+'" data-class="'+$('#nav-item-class').val()+'" data-pageid="'+$('#nav-item-page-id').val()+'" ><a href="#" class="caption ui-droppable" rel="'+$('#nav-item-id').val()+'">'+$('#nav-item-name').val()+'</a><span class="cmds"><span class="callback op1 icon-plus"></span> <span class="callback op2 icon-pencil"></span><span class="callback op3 icon-trash"></span></span></li>');
    if(currentNode != null){
        if(is_new == 0){
            classAttr = currentNode.attr('class');
            currentNode.attr('data-name', $('#nav-item-name').val()); 
            //currentNode.attr('data-route',$('#nav-item-link').val());
            //currentNode.attr('data-link', $('#nav-item-link-display').val());
            currentNode.attr('data-class', $('#nav-item-class').val());
            currentNode.attr('data-pageid', $('#nav-item-page-id').val());
            currentNode.children('a').html($('#nav-item-name').val());
            //currentNode.children('a').attr('href', $('#nav-item-link').val());
            currentNode.addClass(classAttr);
        }
        else if(!currentNode.children('ul').length){
            currentNode.addClass(classAttr);
            currentNode.append('<ul style="display: none;"></ul>');
            currentNode.children('ul').append(menuItem);
            
        }
        else{
            currentNode.children('ul').append(menuItem);
        }
        
        
    }
    else{
            $('#PageTree').append(menuItem);
    }

    $('#node-form').hide();
    window.tree.init();
}

function cancelAdding(){
    $('#node-form').hide();
}

function loadTree(){
    return $("ul.tree").liveflex_treeview({
		handle:'a.caption'
		,callbackSelector: 'span.callback'
		,callback: function(e){
			//one way to use different items, you could also use rel or data
			if($(e.target).hasClass('op1')){
                            addNode($(e.target).closest('li'));
			}else if($(e.target).hasClass('op2')){
                            editNode($(e.target).closest('li'));
			}
                        else{
                            if(confirm('Are you sure! This will delete the selected node and all its children')){
                                $(e.target).closest('li').remove();
                            }
                            else{
                                return false;
                            }
                            
                        }
		},itemMoved: function(csv){
		},dirClick: function(node){
			console.log(node.find('>a').text() + " > " + (node.hasClass('collapsed') ? ' closed' : ' opened'));
		},nodeClick: function(node){
                    console.log(node.find('>a').text() + ' > selected');

		}
	});
}
window.tree = {};
$(document).ready(function () {
        //$("ul.tree").append('<li class="" data-name="'+$('#nav-item-id').val()+'"data-name="'+$('#nav-item-name').val()+'" data-route="'+$('#nav-item-link').val()+'"data-link="'+$('#nav-item-link-display').val()+'" data-class="'+$('#nav-item-class').val()+'" data-pageid="'+$('#nav-item-page-id').val()+'" ><a href="'+$('#nav-item-link').val()+'" class="caption ui-droppable">'+$('#nav-item-name').val()+'</a><span class="cmds"><span class="callback op1">Add</span> <span class="callback op2">Edit</span><span class="callback op3">Delete</span></span></li>');
	window.tree = loadTree();
	$('#sync_menu').click(function(e){
		//get the moved items as id-parentId.position, used for db update
		//log(tree.data("liveflex.treeview").getMoved());
		//or get the tree as a nested array, to process further
		var treeArray = window.tree.data("liveflex.treeview").parseTree();
                console.log(treeArray);
                 $.ajax({
                        url: '/app_dev.php/add_menu',
                        type: 'POST',
                        data: { 'block_id': block_id,
                            'content': treeArray
                        },
                        success: function(response) {
                            location.reload();
                        }
                    });


	});
});
</script>
{% endif %}
{% endblock %}
