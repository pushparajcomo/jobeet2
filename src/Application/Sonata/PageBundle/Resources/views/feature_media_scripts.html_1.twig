
    <script type="text/javascript">
      {% set id = 's51b41b76033d5_settings_mediaId' %}
      {% set uniqid = 's51b41b760fd35' %}
      {#% set code = 'sonata.media.admin.media' %#}
      {% if app.environment == 'prod' %}
          {% set url = '/admin/sonata/page/page/blockMediaSave' %}
          {% set galleryUrl = '/admin/sonata/page/page/blockGallerySave' %}
      {% else %}
          {% set url = '/app_dev.php/admin/sonata/page/page/blockMediaSave' %}
          {% set galleryUrl = '/app_dev.php/admin/sonata/page/page/blockGallerySave' %}
      {% endif %}



    {#
      handle link click in a list :
        - if the parent has an objectId defined then the related input get updated
        - if the parent has NO object then an ajax request is made to refresh the popup
    #}
    var field_dialog_form_list_link_{{ id }} = function(event) {
        initialize_popup_{{ id }}();

        event.preventDefault();
        event.stopPropagation();



        var element = jQuery(this).parents('#field_dialog_{{ id }} .sonata-ba-list-field');

        // the user does click on a row column
        if (element.length == 0) {
            // make a recursive call (ie: reset the filter)
            jQuery.ajax({
                type: 'GET',
                url: jQuery(this).attr('href'),
                success: function(html) {
                   field_dialog_{{ id }}.html(html);
                }
            });

            return;
        }else{
            if(code == 'sonata.media.admin.media')
            {
                src = $('#cms-block-'+blockid_back+ ' img').attr('src');
                    if (typeof src !== 'undefined' && src !== false) {
//                       $('#cms-block-'+blockid_back+ ' img').attr('src','/bundles/sonataadmin/ajax-loader.gif');
                       $('#cms-block-'+blockid_back+ ' img').attr('width','');
                       $('#cms-block-'+blockid_back+ ' img').attr('height','');
                    }else{
                       $('#cms-block-'+blockid_back+ ' iframe').remove();
                       $('#cms-block-'+blockid_back+ ' div').eq(1).html('<img src="/bundles/sonataadmin/ajax-loader.gif"/>');
                    }

                mediaid = $(this).parents('td').attr('objectid');
                path = $(this).find('img').attr('src');
                var request = jQuery.ajax({
                        url: '{{ url }}',
                        type: "POST",
                        data: {
                                mediaId : mediaid,
                                blockId : blockid_back
                        },
                        dataType: "html"
                }).done(function(obj){
                    path = path.replace(/[^/]*$/,obj);
                    src = $('#cms-block-'+blockid_back+ ' img').attr('src');
                    if (typeof src !== 'undefined' && src !== false) {
                        $('#cms-block-'+blockid_back+ ' img').attr('src',path);
                    }else{
                       $('#cms-block-'+blockid_back+ ' iframe').remove();
                       $('#cms-block-'+blockid_back+ ' div').eq(1).html('<img src="'+path+'"/>');
                    }

                    return true;
                });
            }else{
                galleryId = $(this).parents('td').attr('objectid');
                var request = jQuery.ajax({
                        url: '{{ galleryUrl }}',
                        type: "POST",
                        data: {
                                galleryId : galleryId,
                                blockId : blockid_back
                        },
                        dataType: "html"
                }).done(function(obj){
                    var mediaItems = obj.split(',');
                    var slider = $('#general-header-slider-'+blockid_back).data('flexslider');
                    slider.slides.map(function(idx, slide) { slider.removeSlide(slide); });
                    slider.currentSlide = 0;
                    slider.count = 0;

                    $(mediaItems).each(function(k,v){
                         slider.addSlide('<li><img title="IMG_3620.JPG" src="'+v+'"/></li>');
                    });

                    return true;
                });
            }

        }

        jQuery('#{{ id }}').val(element.attr('objectId'));
        jQuery('#{{ id }}').trigger('change');


        field_dialog_{{ id }}.dialog('close');
    }

    // handle the add link
    var field_dialog_form_list_{{ id }} = function(event) {

        initialize_popup_{{ id }}();

        event.preventDefault();
        event.stopPropagation();



        var a = jQuery(this);
        blockid_back = a.attr('blockid');
        code = a.attr('code');

        field_dialog_{{ id }}.html('<div id="loading-image" align="center" ><img src="/bundles/sonataadmin/ajax-loader.gif" alt="Loading..." /></div>');
        field_dialog_{{ id }}.dialog({
                    height: 'auto',
                    width: 980,
                    modal: true,
                    resizable: true,
                    title: 'Media List',
                    close: function(event, ui) {
                        // make sure we have a clean state
                        jQuery('a', field_dialog_{{ id }}).die('click');
                        jQuery('form', field_dialog_{{ id }}).die('submit');
                    },
                    zIndex: 9998,
                });
        // retrieve the form element from the related admin generator
        jQuery.ajax({
            url: a.attr('href'),
            dataType: 'html',
            success: function(html) {



                // populate the popup container
                field_dialog_{{ id }}.html(html);

                //Admin.add_filters(field_dialog_{{ id }});
                jQuery('div.filter_container.inactive', field_dialog_{{ id }}).hide();
                jQuery('fieldset.filter_legend', field_dialog_{{ id }}).click(function(event) {
                   jQuery('div.filter_container', jQuery(event.target).parent()).toggle();
                });

                // capture the submit event to make an ajax call, ie : POST data to the
                // related create admin
                jQuery('a', field_dialog_{{ id }}).live('click', field_dialog_form_list_link_{{ id }});
                jQuery('form', field_dialog_{{ id }}).live('submit', function(event) {
                    event.preventDefault();
                    field_dialog_{{ id }}.html(html);
                    var form = jQuery(this);
                    jQuery(form).ajaxSubmit({
                        type: form.attr('method'),
                        url: form.attr('action'),
                        dataType: 'html',
                        data: {_xml_http_request: true},
                        success: function(html) {
                           field_dialog_{{ id }}.html(html);
                        }
                    });
                });

                // open the dialog in modal mode
                field_dialog_{{ id }}.dialog({
                    height: 'auto',
                    width: 980,
                    modal: true,
                    resizable: true,
                    title: 'Media List',
                    close: function(event, ui) {
                        // make sure we have a clean state
                        jQuery('a', field_dialog_{{ id }}).die('click');
                        jQuery('form', field_dialog_{{ id }}).die('submit');
                    },
                    zIndex: 9998,
                });
            }
        });
    };

    // handle the add link
    var field_dialog_form_add_{{ id }} = function(event) {
        initialize_popup_{{ id }}();

        event.preventDefault();
        event.stopPropagation();

        var a = jQuery(this);

        field_dialog_{{ id }}.html('');


        // retrieve the form element from the related admin generator
        jQuery.ajax({
            url: a.attr('href'),
            dataType: 'html',
            success: function(html) {


                // populate the popup container
                field_dialog_{{ id }}.html(html);

                // capture the submit event to make an ajax call, ie : POST data to the
                // related create admin
                jQuery('a', field_dialog_{{ id }}).live('click', field_dialog_form_action_{{ id }});
                jQuery('form', field_dialog_{{ id }}).live('submit', field_dialog_form_action_{{ id }});

                // open the dialog in modal mode
                field_dialog_{{ id }}.dialog({
                    height: 'auto',
                    width: 650,
                    modal: true,
                    autoOpen: true,
                    resizable: true,
                    title: '{{ "test" }}',
                    close: function(event, ui) {

                        // make sure we have a clean state
                        jQuery('a', field_dialog_{{ id }}).die('click');
                        jQuery('form', field_dialog_{{ id }}).die('submit');
                    },
                    zIndex: 9998
                });
            }
        });
    };

    // handle the post data
    var field_dialog_form_action_{{ id }} = function(event) {

        event.preventDefault();
        event.stopPropagation();



        initialize_popup_{{ id }}();

        var element = jQuery(this);

        if (this.nodeName == 'FORM') {
            var url  = element.attr('action');
            var type = element.attr('method');
        } else if (this.nodeName == 'A') {
            var url  = element.attr('href');
            var type = 'GET';
        } else {
            alert('unexpected element : @' + this.nodeName + '@');
            return;
        }

        if (element.hasClass('sonata-ba-action')) {

            return;
        }

        var data = {
            _xml_http_request: true
        }

        var form = jQuery(this);



        // the ajax post
        jQuery(form).ajaxSubmit({
            url: url,
            type: type,
            data: data,
            success: function(data) {



                if (typeof data == 'string') {
                    field_dialog_{{ id }}.html(data);
                    return;
                };

                // if the crud action return ok, then the element has been added
                // so the widget container must be refresh with the last option available
                if (data.result == 'ok') {
                    field_dialog_{{ id }}.dialog('close');


                        {#
                           in this case we update the hidden input, and call the change event to
                           retrieve the post information
                        #}
                        jQuery('#{{ id }}').val(data.objectId);
                        jQuery('#{{ id }}').change();



                    return;
                }

                // otherwise, display form error
                field_dialog_{{ id }}.html(html);


                // reattach the event
                jQuery('form', field_dialog_{{ id }}).submit(field_dialog_form_action_{{ id }});
            }
        });

        return false;
    }

    var field_dialog_{{ id }} = false;

    function initialize_popup_{{ id }}() {
        // initialize component
        if (!field_dialog_{{ id }}) {
            field_dialog_{{ id }} = jQuery("#field_dialog_{{ id }}");
            console.log(field_dialog_{{ id }});

            // move the dialog as a child of the root element, nested form breaks html ...
            jQuery(document.body).append(field_dialog_{{ id }});
        }
    }

     {#
        This code is used to defined the "add" popup
    #}
    // this function initialize the popup
    // this can be only done this way has popup can be cascaded
    function start_field_dialog_form_add_{{ id }}(link) {

        // remove the html event
        link.onclick = null;

        initialize_popup_{{ id }}();

        // add the jQuery event to the a element
        jQuery(link)
            .click(field_dialog_form_add_{{ id }})
            .trigger('click')
        ;

        return false;
    }





        {#
            This code is used to defined the "list" popup
        #}
        // this function initialize the popup
        // this can be only done this way has popup can be cascaded
        var blockid_back = '';
        function start_field_dialog_form_list_{{ id }}(link) {

            link.onclick = null;
            blockid_back = $(link).attr('blockid');
            code = $(link).attr('code');
            initialize_popup_{{ id }}();

            // add the jQuery event to the a element
            jQuery(link)
                .click(field_dialog_form_list_{{ id }})
                .trigger('click')
            ;

            return false;
        }

        {#
          attach onchange event on the input
        #}

        // update the label
        jQuery('#{{ id }}').live('change', function(event) {



            jQuery('#field_widget_{{ id }}').html("<span><img src=\"{{ asset('bundles/sonataadmin/ajax-loader.gif') }}\" style=\"vertical-align: middle; margin-right: 10px\"/>{{ 'loading_information'|trans([], 'SonataAdminBundle') }}</span>");
            jQuery.ajax({
                type: 'GET',
                url: '{{ url('sonata_admin_short_object_information', {
                    'objectId': 'OBJECT_ID',
                    'uniqid': '{{ uniqid }}',
                    'code': '{{ code }}'
                })}}'.replace('OBJECT_ID', jQuery(this).val()),
                success: function(html) {
                    jQuery('#field_widget_{{ id }}').html(html);
                }
            });
        });



</script>